<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ContextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAsgsAAAJNU0Z0AUkBTAIBAQUB
        AAEgAQABIAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAASADAAEBAQABIAYAASD/
        ACcAAx0BKQNDAXcDTwGfA08BnwNDAXYDHQEo4AADCwEOA1ABpAMEAf4DNgHnA1MBtwNTAbcDMwHoAwgB
        /QNPAaIDCwEO1AADCwEOA0oB0gM4AeYDMwFRBAIIAAQCAzQBUwM2AecDSwHRAwsBDtAAA1ABpQM4AeYD
        FgEeGAADFwEfAzYB5wNPAaLMAAMdASkDBAH+AzMBUQgAAzABSgM6AWAQAAM0AVMDCAH9Ax0BKMgAA0QB
        egM4AeYEAggAAzUBVQMAAf8DUAGgAwkBCwgABAIDNgHnA0QBeMgAA04BngNTAbcMAAM1AVUDAAH/AwAB
        /wNHAdcDIAEtCAADUQG5A04BnMgAA08BnwNRAbYMAAM1AVUDAAH/AwAB/wNHAdcDIAEtCAADUQG4A08B
        ncgAA0QBegM5AeUEAggAAzUBVQMAAf8DUAGgAwkBCwgABAIDNgHnA0QBeMgAAx4BKgMEAf4DMwFQCAAD
        MAFKAzoBYBAAAzMBUQMEAf4DHQEpzAADUAGmAzkB5QMVAR0YAAMWAR4DOAHmA1ABo9AAAwwBDwNKAdMD
        OQHlAzMBUAQCCAAEAgMzAVEDOAHmA0oB0gMLAQ7UAAMMAQ8DUAGmAwQB/gM4AeYDUQG1A1EBtgM2AecD
        BAH+A1ABpQMLAQ7gAAMeASoDRAF5A08BnwNPAZ8DRAF5Ax0BKf8A/wDqAAMdASgDQwF3A08BnwNPAZ8D
        QwF2Ax0BKCgAAx0BKANDAXcDTwGfA08BnwNDAXYDHQEoKAAEAQMhATADNwFaAzYBWQMhAS8sAAMdASgD
        QwF3A08BnwNPAZ8DQwF2Ax0BKCAAAwsBDgNPAaIDBAH+AzYB5wNTAbcDUwG3AzMB6AMIAf0DUAGhAwoB
        DRgAAwsBDgNPAaIDBAH+AzYB5wNTAbcDUwG3AzMB6AMIAf0DUAGhAwoBDRwAAzMBUQNFAdoDNgHnA1MB
        twNTAbcDMwHoA0QB2QMyAU8cAAMLAQ4DTwGiAwQB/gM2AecDUwG3A1MBtwMzAegDCAH9A1ABoQMKAQ0U
        AAMLAQ4DSwHRAzkB5QMzAVEEAggABAIDMwFSAzgB5gNMAdADCgENEAADCwEOA0sB0QM5AeUDMwFRBAII
        AAQCAzMBUgM4AeYDTAHQAwoBDRQAA0YBfwM5AeUDMwFRBAIIAAQCAzMBUgM4AeYDRgF9FAADCwEOA0sB
        0QM5AeUDMwFRBAIIAAQCAzMBUgM4AeYDTAHQAwoBDRAAA1ABpAM5AeUDFQEdFAADBAEFAxYBHgM4AeYD
        UAGhEAADUAGkAzkB5QMVAR0EAAM1AVUDCAEKDAADFgEeAzgB5gNQAaEQAAMzAVIDOQHlAxUBHQgAAxUB
        HQMVAR0IAAMWAR4DOAHmAzIBTxAAA1ABpAM5AeUDFQEdAwQBBRAAAwQBBQMWAR4DOAHmA1ABoQwAAx0B
        KQMEAf4DMwFQFAADQAFxA1ABxQMEAQUDMwFSAwgB/QMdASgIAAMdASkDBAH+AzMBUAQAA0ABcQMAAf8D
        UgG9AwgBCgwAAzMBUgMIAf0DHQEoCAAEAQNFAdsDMwFQDAADSgGKA0oBiQwAAzMBUgNEAdkEAQgAAx0B
        KQMEAf4DMwFQAwQBBQNQAcUDQAFxCAADQAFxA1ABxQMEAQUDMwFSAwgB/QMdASgIAANEAXoDOAHmBAEQ
        AANAAXEDBAH+A0ABcQQABAIDNgHnA0QBeAgAA0QBegM4AeYEAQM/AWwDBAH+A0sBjgMvAewDUgG9AwgB
        CggABAIDNgHnA0QBeAgAAyMBMgM4AeYEAQwAAwcBCQMHAQkMAAQCAzYB5wMhATAIAANEAXoDOAHmBAEE
        AANAAXEDBAH+A0ABcQNAAXEDBAH+A0ABcQQABAIDNgHnA0QBeAgAA04BngNTAbcQAAM9AWgDBAH+A0EB
        cgwAA1EBuANPAZ0IAANOAZ4DUwG3BAADJgE5Az8BbQQAAyEELwHsA1IBvQMIAQoIAANRAbgDTwGdCAAD
        NgFZA1MBtxAAA0oBjQNKAY0QAANRAbkDNgFXCAADTgGeA1MBtwwAA0ABcQMEAf4DBAH+A0ABcQwAA1EB
        uANPAZ0IAANOAZ4DUwG3EAADUQGqA1IBtBAAA1EBuANPAZ0IAANPAZ8DUQG2FAADIQEvAzMB6wNPAcED
        CQEMBAADUQG4A08BnQgAAzcBWgNRAbYQAANNAZQDTAGTEAADUQG4AzYBWQgAA04BngNTAbcMAANAAXED
        BAH+AwQB/gNAAXEMAANRAbgDTwGdCAADRAF6AzkB5QQBDAADUQGqA1EBqgwABAIDNgHnA0QBeAgAA0QB
        egM5AeUEARQAAyEELwHsA0sBjgQCAzYB5wNEAXgIAAMjATMDOQHlBAEMAANPAZoDTwGaDAAEAgM2AecD
        IgExCAADRAF6AzkB5QQBBAADQAFxAwQB/gNAAXEDQAFxAwQB/gNAAXEEAAQCAzYB5wNEAXgIAAMeASoD
        BAH+AzEBTgwAA1EBqgNRAaoMAAMzAVEDBAH+Ax0BKAgAAx4BKgMEAf4DMQFOGAADHgEqAwsBDgMzAVED
        BAH+Ax0BKAgABAEDQwHcAzEBTgwAA1ABoQNQAaEMAAMzAVEDRQHaBAEIAAMeASoDBAH+AzEBTgMEAQUD
        UAHFA0ABcQgAA0ABcQNQAcUDBAEFAzMBUQMEAf4DHQEoDAADUAGmAzgB5AMVARwIAANRAaoDUQGqCAAD
        FQEdAzkB5QNPAaIQAANQAaYDOAHkAxUBHBgAAxUBHQM5AeUDTwGiEAADNAFUAz0B4wMVARwIAAMYASED
        GAEhCAADFQEdAzkB5QMzAVEQAANQAaYDOAHkAxUBHAMEAQUQAAMEAQUDFQEdAzkB5QNPAaIQAAMMAQ8D
        SgHSAzgB5AMxAU4EAQgABAEDMwFQAzkB5QNLAdEDCwEOEAADDAEPA0oB0gM4AeQDMQFOBAEIAAQBAzMB
        UAM5AeUDSwHRAwsBDhQAA0YBgQM4AeQDMQFOBAEIAAQBAzMBUAM5AeUDRgF/FAADDAEPA0oB0gM4AeQD
        MQFOBAEIAAQBAzMBUAM5AeUDSwHRAwsBDhQAAwwBDwNQAaYDBAH+AzgB5gNRAbUDUQG1AzgB5gMEAf4D
        UAGkAwsBDhgAAwwBDwNQAaYDBAH+AzgB5gNRAbUDUQG1AzgB5gMEAf4DUAGkAwsBDhwAAzQBVANDAdwD
        OAHmA1EBtQNRAbUDOAHmA0UB2wMzAVIcAAMMAQ8DUAGmAwQB/gM4AeYDUQG1A1EBtQM4AeYDBAH+A1AB
        pAMLAQ4gAAMeASoDRAF5A08BnwNPAZ8DRAF5Ax0BKSgAAx4BKgNEAXkDTwGfA08BnwNEAXkDHQEpKAAE
        AQMjATIDOAFbAzgBWwMiATEEASgAAx4BKgNEAXkDTwGfA08BnwNEAXkDHQEp/wAVAAFCAU0BPgcAAT4D
        AAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/AQAC/wYAAfgBHwYAAeABBwYAAcEBgwYAAccB4wYAAYwB
        8QYAAYwBMQYAAZwBGQYAAZwBGQYAAYwBMQYAAYwB8QYAAccB4wYAAcEBgwYAAeABBwYAAfgBHwYAAv8G
        AAj/AfgBHwH4AR8B+AE/AfgBHwHgAQcB4AEHAfABDwHgAQcBwQGDAcEBgwHhAYcBwQGDAccBwwHEAeMB
        xgFjAsMBjwGBAYgBcQGOAXECgQGPAREBgAExAY4BcQGIAREBngE5AZIBGQGeAXkBnAE5AZ4BeQGfAQkB
        ngF5AZwBOQGOAXEBjwGBAY4BcQGIAREBjgFxAY8BwQGOAXECgQHGAWMBxwHjAcYBYwLDAcEBgwHBAYMB
        4QGHAcEBgwHgAQcB4AEHAfABDwHgAQcB+AEfAfgBHwH4AR8B+AEfCP8L
</value>
  </data>
</root>