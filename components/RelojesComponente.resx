<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ContextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAtgsAAAJNU0Z0AUkBTAIBAQUB
        AAEoAQABKAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAASADAAEBAQABIAYAASD/
        ACcAAx0BKQNDAXcDUAGfA1ABnwNDAXYDHQEo4AADCwEOA1EBpAMFAf4DPwHnA1YBtwNWAbcDOgHoAwoB
        /QNRAaIDCwEO1AADCwEOA1EB0gNBAeYDMwFRBAIIAAQCAzQBUwM/AecDUQHRAwsBDtAAA1IBpQNBAeYD
        FgEeGAADFwEfAz8B5wNRAaLMAAMdASkDBQH+AzMBUQgAAzABSgM6AWAQAAM0AVMDCgH9Ax0BKMgAA0QB
        egNBAeYEAggAAzUBVQMAAf8DUQGgAwkBCwgABAIDPwHnA0QBeMgAA08BngNWAbcMAAM1AVUDAAH/AwAB
        /wNOAdcDIAEtCAADVQG5A1ABnMgAA1ABnwNUAbYMAAM1AVUDAAH/AwAB/wNOAdcDIAEtCAADVAG4A1AB
        ncgAA0QBegNBAeUEAggAAzUBVQMAAf8DUQGgAwkBCwgABAIDPwHnA0QBeMgAAx4BKgMFAf4DMwFQCAAD
        MAFKAzoBYBAAAzMBUQMFAf4DHQEpzAADUQGmA0EB5QMVAR0YAAMWAR4DQQHmA1EBo9AAAwwBDwNPAdMD
        QQHlAzMBUAQCCAAEAgMzAVEDQQHmA1EB0gMLAQ7UAAMMAQ8DUQGmAwUB/gNBAeYDVAG1A1QBtgM/AecD
        BQH+A1IBpQMLAQ7gAAMeASoDRAF5A1ABnwNQAZ8DRAF5Ax0BKf8A/wDqAAMdASgDQwF3A1ABnwNQAZ8D
        QwF2Ax0BKCgAAx0BKANDAXcDUAGfA1ABnwNDAXYDHQEoKAAEAQMhATADNwFaAzYBWQMhAS8sAAMdASgD
        QwF3A1ABnwNQAZ8DQwF2Ax0BKCAAAwsBDgNRAaIDBQH+Az8B5wNWAbcDVgG3AzoB6AMKAf0DUQGhAwoB
        DRgAAwsBDgNRAaIDBQH+Az8B5wNWAbcDVgG3AzoB6AMKAf0DUQGhAwoBDRwAAzMBUQNNAdoDPwHnA1YB
        twNWAbcDOgHoA0wB2QMyAU8cAAMLAQ4DUQGiAwUB/gM/AecDVgG3A1YBtwM6AegDCgH9A1EBoQMKAQ0U
        AAMLAQ4DUQHRA0EB5QMzAVEEAggABAIDMwFSA0EB5gNSAdADCgENEAADCwEOA1EB0QNBAeUDMwFRBAII
        AAQCAzMBUgNBAeYDUgHQAwoBDRQAA0YBfwNBAeUDMwFRBAIIAAQCAzMBUgNBAeYDRgF9FAADCwEOA1EB
        0QNBAeUDMwFRBAIIAAQCAzMBUgNBAeYDUgHQAwoBDRAAA1EBpANBAeUDFQEdFAADBAEFAxYBHgNBAeYD
        UQGhEAADUQGkA0EB5QMVAR0EAAM1AVUDCAEKDAADFgEeA0EB5gNRAaEQAAMzAVIDQQHlAxUBHQgAAxUB
        HQMVAR0IAAMWAR4DQQHmAzIBTxAAA1EBpANBAeUDFQEdAwQBBRAAAwQBBQMWAR4DQQHmA1EBoQwAAx0B
        KQMFAf4DMwFQFAADQAFxA1UBxQMEAQUDMwFSAwoB/QMdASgIAAMdASkDBQH+AzMBUAQAA0ABcQMAAf8D
        VgG9AwgBCgwAAzMBUgMKAf0DHQEoCAAEAQNMAdsDMwFQDAADSgGKA0oBiQwAAzMBUgNMAdkEAQgAAx0B
        KQMFAf4DMwFQAwQBBQNVAcUDQAFxCAADQAFxA1UBxQMEAQUDMwFSAwoB/QMdASgIAANEAXoDQQHmBAEQ
        AANAAXEDBQH+A0ABcQQABAIDPwHnA0QBeAgAA0QBegNBAeYEAQM/AWwDBQH+A0wBjgM3AewDVgG9AwgB
        CggABAIDPwHnA0QBeAgAAyMBMgNBAeYEAQwAAwcBCQMHAQkMAAQCAz8B5wMhATAIAANEAXoDQQHmBAEE
        AANAAXEDBQH+A0ABcQNAAXEDBQH+A0ABcQQABAIDPwHnA0QBeAgAA08BngNWAbcQAAM9AWgDBQH+A0EB
        cgwAA1QBuANQAZ0IAANPAZ4DVgG3BAADJgE5Az8BbQQAAyEBLwM3AewDVgG9AwgBCggAA1QBuANQAZ0I
        AAM2AVkDVgG3EAADSwGNA0sBjRAAA1UBuQM2AVcIAANPAZ4DVgG3DAADQAFxAwUB/gMFAf4DQAFxDAAD
        VAG4A1ABnQgAA08BngNWAbcQAANTAaoDVQG0EAADVAG4A1ABnQgAA1ABnwNUAbYUAAMhAS8DOgHrA1QB
        wQMJAQwEAANUAbgDUAGdCAADNwFaA1QBthAAA04BlANNAZMQAANUAbgDNgFZCAADTwGeA1YBtwwAA0AB
        cQMFAf4DBQH+A0ABcQwAA1QBuANQAZ0IAANEAXoDQQHlBAEMAANTAaoDUwGqDAAEAgM/AecDRAF4CAAD
        RAF6A0EB5QQBFAADIQEvAzcB7ANMAY4EAgM/AecDRAF4CAADIwEzA0EB5QQBDAADUAGaA1ABmgwABAID
        PwHnAyIBMQgAA0QBegNBAeUEAQQAA0ABcQMFAf4DQAFxA0ABcQMFAf4DQAFxBAAEAgM/AecDRAF4CAAD
        HgEqAwUB/gMxAU4MAANTAaoDUwGqDAADMwFRAwUB/gMdASgIAAMeASoDBQH+AzEBThgAAx4BKgMLAQ4D
        MwFRAwUB/gMdASgIAAQBA0sB3AMxAU4MAANRAaEDUQGhDAADMwFRA00B2gQBCAADHgEqAwUB/gMxAU4D
        BAEFA1UBxQNAAXEIAANAAXEDVQHFAwQBBQMzAVEDBQH+Ax0BKAwAA1EBpgM/AeQDFQEcCAADUwGqA1MB
        qggAAxUBHQNBAeUDUQGiEAADUQGmAz8B5AMVARwYAAMVAR0DQQHlA1EBohAAAzQBVANEAeMDFQEcCAAD
        GAEhAxgBIQgAAxUBHQNBAeUDMwFREAADUQGmAz8B5AMVARwDBAEFEAADBAEFAxUBHQNBAeUDUQGiEAAD
        DAEPA1EB0gM/AeQDMQFOBAEIAAQBAzMBUANBAeUDUQHRAwsBDhAAAwwBDwNRAdIDPwHkAzEBTgQBCAAE
        AQMzAVADQQHlA1EB0QMLAQ4UAANGAYEDPwHkAzEBTgQBCAAEAQMzAVADQQHlA0YBfxQAAwwBDwNRAdID
        PwHkAzEBTgQBCAAEAQMzAVADQQHlA1EB0QMLAQ4UAAMMAQ8DUQGmAwUB/gNBAeYDVAG1A1QBtQNBAeYD
        BQH+A1EBpAMLAQ4YAAMMAQ8DUQGmAwUB/gNBAeYDVAG1A1QBtQNBAeYDBQH+A1EBpAMLAQ4cAAM0AVQD
        SwHcA0EB5gNUAbUDVAG1A0EB5gNMAdsDMwFSHAADDAEPA1EBpgMFAf4DQQHmA1QBtQNUAbUDQQHmAwUB
        /gNRAaQDCwEOIAADHgEqA0QBeQNQAZ8DUAGfA0QBeQMdASkoAAMeASoDRAF5A1ABnwNQAZ8DRAF5Ax0B
        KSgABAEDIwEyAzgBWwM4AVsDIgExBAEoAAMeASoDRAF5A1ABnwNQAZ8DRAF5Ax0BKf8AFQABQgFNAT4H
        AAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/wEAAv8GAAH4AR8GAAHgAQcGAAHBAYMGAAHHAeMG
        AAGMAfEGAAGMATEGAAGcARkGAAGcARkGAAGMATEGAAGMAfEGAAHHAeMGAAHBAYMGAAHgAQcGAAH4AR8G
        AAL/BgAI/wH4AR8B+AEfAfgBPwH4AR8B4AEHAeABBwHwAQ8B4AEHAcEBgwHBAYMB4QGHAcEBgwHHAcMB
        xAHjAcYBYwLDAY8BgQGIAXEBjgFxAoEBjwERAYABMQGOAXEBiAERAZ4BOQGSARkBngF5AZwBOQGeAXkB
        nwEJAZ4BeQGcATkBjgFxAY8BgQGOAXEBiAERAY4BcQGPAcEBjgFxAoEBxgFjAccB4wHGAWMCwwHBAYMB
        wQGDAeEBhwHBAYMB4AEHAeABBwHwAQ8B4AEHAfgBHwH4AR8B+AEfAfgBHwj/Cw==
</value>
  </data>
</root>