<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ContextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAtAsAAAJNU0Z0AUkBTAIBAQUB
        AAFIAQABSAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAASADAAEBAQABIAYAASD/
        ACcAAx0BKQNDAXcDUAGfA1ABnwNDAXYDHQEo4AADCwEOA1EBpAMJAf4DUwHnA1gBtwNYAbcDTwHoAxIB
        /QNRAaIDCwEO1AADCwEOA1sB0gNUAeYDMwFRBAIIAAQCAzQEUwHnA10B0QMLAQ7QAANSAaUDVAHmAxYB
        HhgAAxcBHwNTAecDUQGizAADHQEpAwkB/gMzAVEIAAMwAUoDOgFgEAADNAFTAxIB/QMdASjIAANEAXoD
        VAHmBAIIAAM1AVUDAAH/A1IBoAMJAQsIAAQCA1MB5wNEAXjIAANRAZ4DWAG3DAADNQFVAwAB/wMAAf8D
        WgHXAyABLQgAA1cBuQNQAZzIAANQAZ8DVgG2DAADNQFVAwAB/wMAAf8DWgHXAyABLQgAA1gBuANQAZ3I
        AANEAXoDVQHlBAIIAAM1AVUDAAH/A1IBoAMJAQsIAAQCA1MB5wNEAXjIAAMeASoDCQH+AzMBUAgAAzAB
        SgM6AWAQAAMzAVEDCQH+Ax0BKcwAA1MBpgNVAeUDFQEdGAADFgEeA1QB5gNSAaPQAAMMAQ8DWwHTA1UB
        5QMzAVAEAggABAIDMwFRA1QB5gNbAdIDCwEO1AADDAEPA1MBpgMJAf4DVAHmA1YBtQNWAbYDUwHnAwkB
        /gNSAaUDCwEO4AADHgEqA0QBeQNQAZ8DUAGfA0QBeQMdASn/AP8A6gADHQEoA0MBdwNQAZ8DUAGfA0MB
        dgMdASgoAAMdASgDQwF3A1ABnwNQAZ8DQwF2Ax0BKCgABAEDIQEwAzcBWgM2AVkDIQEvLAADHQEoA0MB
        dwNQAZ8DUAGfA0MBdgMdASggAAMLAQ4DUQGiAwkB/gNTAecDWAG3A1gBtwNPAegDEgH9A1EBoQMKAQ0Y
        AAMLAQ4DUQGiAwkB/gNTAecDWAG3A1gBtwNPAegDEgH9A1EBoQMKAQ0cAAMzAVEDXAHaA1MB5wNYAbcD
        WAG3A08B6ANaAdkDMgFPHAADCwEOA1EBogMJAf4DUwHnA1gBtwNYAbcDTwHoAxIB/QNRAaEDCgENFAAD
        CwEOA10B0QNVAeUDMwFRBAIIAAQCAzMBUgNUAeYDWwHQAwoBDRAAAwsBDgNdAdEDVQHlAzMBUQQCCAAE
        AgMzAVIDVAHmA1sB0AMKAQ0UAANGAX8DVQHlAzMBUQQCCAAEAgMzAVIDVAHmA0YBfRQAAwsBDgNdAdED
        VQHlAzMBUQQCCAAEAgMzAVIDVAHmA1sB0AMKAQ0QAANRAaQDVQHlAxUBHRQAAwQBBQMWAR4DVAHmA1EB
        oRAAA1EBpANVAeUDFQEdBAADNQFVAwgBCgwAAxYBHgNUAeYDUQGhEAADMwFSA1UB5QMVAR0IAAMVAR0D
        FQEdCAADFgEeA1QB5gMyAU8QAANRAaQDVQHlAxUBHQMEAQUQAAMEAQUDFgEeA1QB5gNRAaEMAAMdASkD
        CQH+AzMBUBQAA0ABcQNbAcUDBAEFAzMBUgMSAf0DHQEoCAADHQEpAwkB/gMzAVAEAANAAXEDAAH/A1gB
        vQMIAQoMAAMzAVIDEgH9Ax0BKAgABAEDWwHbAzMBUAwAA0oBigNKAYkMAAMzAVIDWgHZBAEIAAMdASkD
        CQH+AzMBUAMEAQUDWwHFA0ABcQgAA0ABcQNbAcUDBAEFAzMBUgMSAf0DHQEoCAADRAF6A1QB5gQBEAAD
        QAFxAwkB/gNAAXEEAAQCA1MB5wNEAXgIAANEAXoDVAHmBAEDPwFsAwkB/gNMAY4DTAHsA1gBvQMIAQoI
        AAQCA1MB5wNEAXgIAAMjATIDVAHmBAEMAAMHAQkDBwEJDAAEAgNTAecDIQEwCAADRAF6A1QB5gQBBAAD
        QAFxAwkB/gNAAXEDQAFxAwkB/gNAAXEEAAQCA1MB5wNEAXgIAANRAZ4DWAG3EAADPQFoAwkB/gNBAXIM
        AANYAbgDUAGdCAADUQGeA1gBtwQAAyYBOQM/AW0EAAMhAS8DTAHsA1gBvQMIAQoIAANYAbgDUAGdCAAD
        NgFZA1gBtxAAA0sBjQNLAY0QAANXAbkDNgFXCAADUQGeA1gBtwwAA0ABcQMJAf4DCQH+A0ABcQwAA1gB
        uANQAZ0IAANRAZ4DWAG3EAADUwGqA1UBtBAAA1gBuANQAZ0IAANQAZ8DVgG2FAADIQEvA08B6wNZAcED
        CQEMBAADWAG4A1ABnQgAAzcBWgNWAbYQAANOAZQDTQGTEAADWAG4AzYBWQgAA1EBngNYAbcMAANAAXED
        CQH+AwkB/gNAAXEMAANYAbgDUAGdCAADRAF6A1UB5QQBDAADUwGqA1MBqgwABAIDUwHnA0QBeAgAA0QB
        egNVAeUEARQAAyEBLwNMAewDTAGOBAIDUwHnA0QBeAgAAyMBMwNVAeUEAQwAA1ABmgNQAZoMAAQCA1MB
        5wMiATEIAANEAXoDVQHlBAEEAANAAXEDCQH+A0ABcQNAAXEDCQH+A0ABcQQABAIDUwHnA0QBeAgAAx4B
        KgMJAf4DMQFODAADUwGqA1MBqgwAAzMBUQMJAf4DHQEoCAADHgEqAwkB/gMxAU4YAAMeASoDCwEOAzMB
        UQMJAf4DHQEoCAAEAQNZAdwDMQFODAADUQGhA1EBoQwAAzMBUQNcAdoEAQgAAx4BKgMJAf4DMQFOAwQB
        BQNbAcUDQAFxCAADQAFxA1sBxQMEAQUDMwFRAwkB/gMdASgMAANTAaYDUwHkAxUBHAgAA1MBqgNTAaoI
        AAMVAR0DVQHlA1EBohAAA1MBpgNTAeQDFQEcGAADFQEdA1UB5QNRAaIQAAM0AVQDVgHjAxUBHAgAAxgB
        IQMYASEIAAMVAR0DVQHlAzMBURAAA1MBpgNTAeQDFQEcAwQBBRAAAwQBBQMVAR0DVQHlA1EBohAAAwwB
        DwNbAdIDUwHkAzEBTgQBCAAEAQMzAVADVQHlA10B0QMLAQ4QAAMMAQ8DWwHSA1MB5AMxAU4EAQgABAED
        MwFQA1UB5QNdAdEDCwEOFAADRgGBA1MB5AMxAU4EAQgABAEDMwFQA1UB5QNGAX8UAAMMAQ8DWwHSA1MB
        5AMxAU4EAQgABAEDMwFQA1UB5QNdAdEDCwEOFAADDAEPA1MBpgMJAf4DVAHmA1YBtQNWAbUDVAHmAwkB
        /gNRAaQDCwEOGAADDAEPA1MBpgMJAf4DVAHmA1YBtQNWAbUDVAHmAwkB/gNRAaQDCwEOHAADNAFUA1kB
        3ANUAeYDVgG1A1YBtQNUAeYDWwHbAzMBUhwAAwwBDwNTAaYDCQH+A1QB5gNWAbUDVgG1A1QB5gMJAf4D
        UQGkAwsBDiAAAx4BKgNEAXkDUAGfA1ABnwNEAXkDHQEpKAADHgEqA0QBeQNQAZ8DUAGfA0QBeQMdASko
        AAQBAyMBMgM4AVsDOAFbAyIBMQQBKAADHgEqA0QBeQNQAZ8DUAGfA0QBeQMdASn/ABUAAUIBTQE+BwAB
        PgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/8BAAL/BgAB+AEfBgAB4AEHBgABwQGDBgABxwHjBgAB
        jAHxBgABjAExBgABnAEZBgABnAEZBgABjAExBgABjAHxBgABxwHjBgABwQGDBgAB4AEHBgAB+AEfBgAC
        /wYACP8B+AEfAfgBHwH4AT8B+AEfAeABBwHgAQcB8AEPAeABBwHBAYMBwQGDAeEBhwHBAYMBxwHDAcQB
        4wHGAWMCwwGPAYEBiAFxAY4BcQKBAY8BEQGAATEBjgFxAYgBEQGeATkBkgEZAZ4BeQGcATkBngF5AZ8B
        CQGeAXkBnAE5AY4BcQGPAYEBjgFxAYgBEQGOAXEBjwHBAY4BcQKBAcYBYwHHAeMBxgFjAsMBwQGDAcEB
        gwHhAYcBwQGDAeABBwHgAQcB8AEPAeABBwH4AR8B+AEfAfgBHwH4AR8I/ws=
</value>
  </data>
</root>